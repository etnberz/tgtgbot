[tox]
envlist = py{39}-{unit,functional}
deps =
    pip

[testenv]
description = run the test with pytest under {basepython}
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
deps =
    .[tests]
    pytest-cov >= 2.11.1, <3
# this weird formatting is due to a tox behavior: https://github.com/tox-dev/tox/issues/945
commands =

    unit: python -m pytest {posargs: --cov="{envsitepackagesdir}/tgtgbot" \
    unit: --cov-config="./tests/pytest.ini" --cov-report=html ./tests/unit }
    functional: pytest {posargs: --cov="{envsitepackagesdir}/tgtgbot" \
    functional: --cov-config="./tests/pytest.ini" --cov-report=html ./tests/functional }

[testenv:mypy]
basepython = python3.9
deps =
    mypy==0.910
commands =
    mypy --config-file .tools-cfg/mypy.ini tgtgbot


[testenv:flake8]
skip_install = true
basepython = python3.9
deps =
    flake8~=3.9.2
    flake8-eradicate~=1.1.0
commands =
    flake8 --config .tools-cfg/flake8 tgtgbot tests


[testenv:pylint]
basepython = python3.9
deps =
    pylint~=2.9.6
    pyenchant~=3.2.1
    .[tests]
allowlist_externals =
    bash
commands =
    pylint tgtgbot --rcfile .tools-cfg/pylintrc -j 0
    bash -c 'find ./tests/ -name "*.py" | tr "\n" " " | xargs pylint --rcfile .tools-cfg/pylintrc-test -j 0'

[testenv:black]
skip_install = true
basepython = python3.9
envdir = {toxworkdir}/black
deps =
    black==23.3.0
commands =
    black --check --config .tools-cfg/black-cfg.toml tests tgtgbot

[testenv:black-run]
skip_install = true
basepython = python3.9
envdir = {toxworkdir}/black
deps =
    black==23.3.0
commands =
    black --config .tools-cfg/black-cfg.toml tests tgtgbot

# building tooling
[testenv:build]
skip_install = true
basepython = python3.9
whitelist_externals =
    /bin/sh
deps =
    wheel~=0.36.2
    setuptools~=57.4.0
commands =
    python setup.py sdist bdist_wheel


[testenv:isort]
skip_install = true
basepython = python3.9
envdir = {toxworkdir}/isort
deps =
    isort~=5.9.3
commands =
    isort --settings-path .tools-cfg --src-path . --check-only tests tgtgbot

[testenv:isort-run]
skip_install = true
basepython = python3.9
envdir = {toxworkdir}/isort
deps =
    isort~=5.9.3
commands =
    isort --settings-path .tools-cfg --src-path . tests tgtgbot

[testenv:bandit]
skip_install = true
basepython = python3.9
deps =
    bandit~=1.7.0
commands =
    bandit tgtgbot -r
    # avoid assert warning and password in unit tests
    bandit tests/unit -r -c .tools-cfg/bandit-unit.yaml
    # avoid assert warning
    bandit tests/functional -r -c .tools-cfg/bandit-functional.yaml



[testenv:combine]
skip_install = true
basepython = python3.9
deps =
    coverage~=5.5
commands =
    coverage combine --rcfile .tools-cfg/.coveragerc \
        {toxworkdir}/.coverage.py39-unit \
        {toxworkdir}/.coverage.py39-functional
    coverage xml --rcfile .tools-cfg/.coveragerc
    coverage report


[testenv:bumpversion-draft]
skip_install = true
basepython = python3.8
envdir = {toxworkdir}/bumpversion
deps =
    bump2version~=1.0.1
    towncrier~=21.3.0
commands =
    bumpversion --config-file .tools-cfg/bumpversion.cfg {posargs} --dry-run --verbose
    towncrier build --config .tools-cfg/towncrier.toml --dir . --draft
passenv =
    HOME

[testenv:bumpversion]
skip_install = true
basepython = python3.8
envdir = {toxworkdir}/bumpversion
whitelist_externals = git
deps =
    bump2version~=1.0.1
    towncrier~=21.3.0
commands =
    bumpversion --config-file .tools-cfg/bumpversion.cfg {posargs}
    towncrier build --config .tools-cfg/towncrier.toml --dir . --yes
    # the index should only have the changelog modified as bumpversion needs a clean repo
    git commit --amend --no-edit -a
passenv =
    HOME

# bump2version is not needed there in theory, but it actually is to prevent tox from
# rebuilding the bumpversion env because
# it thinks it is different from the 'bumpversion' definition
[testenv:record-change]
skip_install = true
basepython = python3.8
envdir = {toxworkdir}/bumpversion
deps =
    bump2version~=1.0.1
    towncrier~=21.3.0
commands =
    towncrier create --config .tools-cfg/towncrier.toml --dir . {posargs}
